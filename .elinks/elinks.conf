## ELinks 0.13.GIT configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## bookmarks 
#  Bookmark options.

  ## bookmarks.file_format <num>
  #  File format for bookmarks (affects both reading and saving):
  #  0 is the default native ELinks format
  #  1 is XBEL universal XML bookmarks format
  set bookmarks.file_format = 0

  ## bookmarks.folder_state [0|1]
  #  When saving bookmarks also store whether folders are expanded or not, so
  #  the look of the bookmark dialog is kept across ELinks sessions. If disabled
  #  all folders will appear unexpanded next time ELinks is run.
  set bookmarks.folder_state = 1


## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## connection 
#  Connection options.

  ## connection.try_ipv4 [0|1]
  #  Whether to try to connect to a host over IPv4. Note that if
  #  connection.try_ipv6 is enabled too, it takes precedence. And better do not
  #  touch this at all unless you are sure what are you doing.
  #  
  #  Note that you can also force a given protocol to be used on a
  #  per-connection basis by using a URL in the style of e.g.
  #  http4://elinks.cz/.
  set connection.try_ipv4 = 1


## cookies 
#  Cookies options.

  ## cookies.max_age <num>
  #  Cookie maximum age (in days):
  #  -1 is use cookie's expiration date if any
  #  0  is force expiration at the end of session, ignoring
  #     cookie's expiration date
  #  1+ is use cookie's expiration date, but limit age to the
  #     given number of days
  set cookies.max_age = -1


## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.editor <str>
      #  Path to the executable that ELinks should launch when the user requests
      #  to edit a textarea with an external editor.
      #  
      #  If this is blank, ELinks will use the value of the environmental
      #  variable $EDITOR. If $EDITOR is empty or not set, ELinks will then
      #  default to "vi".
      set document.browse.forms.editor = "vim"




## terminal 
#  Terminal options.

  ## terminal.xterm-256color 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.xterm-256color.italic [0|1]
    set terminal.xterm-256color.italic = 1
    ## terminal.xterm-256color.block_cursor [0|1]
    set terminal.xterm-256color.block_cursor = 1
    ## terminal.xterm-256color.utf_8_io [0|1]
    set terminal.xterm-256color.utf_8_io = 1
    ## terminal.xterm-256color.m11_hack [0|1]
    set terminal.xterm-256color.m11_hack = 1


## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"





##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.css 
  #  Options concerning how to use CSS for styling documents.

    ## document.css.ignore_display_none [0|1]
    #  When enabled, elements are rendered, even when their display property has
    #  the value "none". Because ELinks's CSS support is still very incomplete,
    #  this setting can improve the way that some documents are rendered.
    set document.css.ignore_display_none = 0


  ## document.download 
  #  Options regarding files downloading and handling.

    ## document.download.directory <str>
    #  Default download directory.
    set document.download.directory = "./Downloads"

    ## document.download.set_original_time [0|1]
    #  Set the timestamp of each downloaded file to the timestamp stored on the
    #  server.
    set document.download.set_original_time = 1

    ## document.download.overwrite <num>
    #  Prevent overwriting the local files:
    #  0 is files will silently be overwritten
    #  1 is add a suffix .{number} (for example '.1') to the name
    #  2 is ask the user
    set document.download.overwrite = 2






##############################
# Automatically saved options
#

## ecmascript 
#  ECMAScript options.

  ## ecmascript.enable [0|1]
  #  Whether to run those scripts inside of documents.
  set ecmascript.enable = 1

  ## ecmascript.error_reporting [0|1]
  #  Open a message box when a script reports an error.
  set ecmascript.error_reporting = 0

  ## ecmascript.ignore_noscript [0|1]
  #  Whether to ignore content enclosed by the <noscript> tag when ECMAScript is
  #  enabled.
  set ecmascript.ignore_noscript = 1

  ## ecmascript.block_window_opening [0|1]
  #  Whether to disallow scripts to open new windows or tabs.
  set ecmascript.block_window_opening = 1


## infofiles 
#  Options for information files in ~/.elinks.

  ## infofiles.save_interval <num>
  #  Interval at which to trigger information files in ~/.elinks to be saved to
  #  disk if they have changed (seconds; 0 to disable)
  set infofiles.save_interval = 300

  ## infofiles.secure_save [0|1]
  #  First write data to unique temporary file, then rename this file upon
  #  successfully finishing this. Note that this relates only to config files,
  #  not downloaded files. You may want to disable it if you are using some
  #  exotic permissions for concerned files. Secure file saving is automagically
  #  disabled if file is symlink.
  #  
  #  Warning: some systems (ie. OS/2, Win32) require that destination file
  #  doesn't exist when rename(3) is called, breaking atomicity, and reducing
  #  reliability of this feature.
  set infofiles.secure_save = 1





##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.http 
  #  HTTP-specific options.

    ## protocol.http.bugs 
    #  Server-side HTTP bugs workarounds.

      ## protocol.http.bugs.accept_charset [0|1]
      #  The Accept-Charset header is quite long and sending it can trigger bugs
      #  in some rarely found servers.
      set protocol.http.bugs.accept_charset = 1

      ## protocol.http.bugs.allow_blacklist [0|1]
      #  Allow blacklisting of buggy servers.
      set protocol.http.bugs.allow_blacklist = 1

      ## protocol.http.bugs.broken_302_redirect [0|1]
      #  Broken 302 redirect (violates RFC but compatible with Netscape). This
      #  is a problem for a lot of web discussion boards and the like. If they
      #  will do strange things to you, try to play with this.
      set protocol.http.bugs.broken_302_redirect = 1


    ## protocol.http.referer 
    #  HTTP referer sending options. HTTP referer is a special header sent in
    #  the HTTP requests, which is supposed to contain the previous page visited
    #  by the browser.This way, the server can know what link did you follow
    #  when accessing that page. However, this behaviour can unfortunately
    #  considerably affect privacy and can lead even to a security problem on
    #  some badly designed web pages.

      ## protocol.http.referer.policy <num>
      #  Mode of sending HTTP referer:
      #  0 is send no referer
      #  1 is send current URL as referer
      #  2 is send fixed fake referer
      #  3 is send previous URL as referer (correct, but insecure)
      set protocol.http.referer.policy = 0

      ## protocol.http.referer.fake <str>
      #  Fake referer to be sent when policy is 2.
      set protocol.http.referer.fake = ""


    ## protocol.http.accept_language <str>
    #  Send Accept-Language header.
    set protocol.http.accept_language = ""






##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.http 
  #  HTTP-specific options.

    ## protocol.http.compression [0|1]
    #  If enabled, the capability to receive compressed content (gzip and/or
    #  bzip2) is announced to the server, which usually sends the reply
    #  compressed, thus saving some bandwidth at slight CPU expense.
    #  
    #  If ELinks displays a incomplete page or garbage, try disabling this
    #  option. If that helps, there may be a bug in the decompression part of
    #  ELinks. Please report such bugs.
    #  
    #  If ELinks has been compiled without compression support, this option has
    #  no effect. To check the supported features, see Help -> About.
    set protocol.http.compression = 1

    ## protocol.http.trace [0|1]
    #  If active, all HTTP requests are sent with TRACE as their method rather
    #  than GET or POST. This is useful for debugging of both ELinks and various
    #  server-side scripts --- the server only returns the client's request back
    #  to the client verbatim. Note that this type of request may not be enabled
    #  on all servers.
    set protocol.http.trace = 0

    ## protocol.http.user_agent <str>
    #  Change the User Agent ID. That means identification string, which is sent
    #  to HTTP server when a document is requested. The 'textmode' token in the
    #  first field is our silent attempt to establish this as a standard for new
    #  textmode user agents, so that the webmasters can have just a single
    #  uniform test for these if they are e.g. pushing some lite version to them
    #  automagically.
    #  
    #  Use " " if you don't want any User-Agent header to be sent at all. URI
    #  rewriting rules may still include parameters that reveal you are using
    #  ELinks.
    #  
    #  %v in the string means ELinks version,
    #  %s in the string means system identification,
    #  %t in the string means size of the terminal,
    #  %b in the string means number of bars displayed by ELinks.
    set protocol.http.user_agent = "Mozilla/5.0"


  ## protocol.no_proxy <str>
  #  Comma separated list of domains for which the proxy (HTTP/FTP) should be
  #  disabled. Optionally, a port can be specified for some domains as well. If
  #  it's blank, NO_PROXY environment variable is checked as well.
  set protocol.no_proxy = ""




bind "main" "h" = "scroll-left"
bind "main" "j" = "scroll-down"
bind "main" "k" = "scroll-up"
bind "main" "l" = "scroll-right"
# Allow easy moving to next link. Not really like in Vim, but similar.
bind "main" "K" = "move-link-prev"
bind "main" "J" = "move-link-next"
# Move to the start and end of the document similar to Vim.
bind "main" "g" = "move-document-start"
bind "main" "G" = "move-document-end"

# Close a tab, similar to Vim's :q.
bind "main" "q" = "tab-close"

# Don't use "c" to close a tab as it's to dangerous for me; too similar to
# screen's "c" which creates a new window.
bind "main" "c" = "none"

# Unbind Q (quit without warning) as it's too dangerous.
bind "main" "Q" = "none"



##################################
# Automatically saved keybindings
#

bind "main" "r" = "rerender"
bind "main" "R" = "reload"
bind "main" "b" = "bookmark-manager"
bind "main" "PageUp" = "none"
bind "main" "PageDown" = "none"
bind "main" "s" = "none"
bind "main" "Ctrl-R" = "none"



##################################
# Automatically saved keybindings
#

bind "main" "O" = "goto-url-current"
bind "main" "o" = "goto-url"
bind "main" "g" = "none"
bind "main" "G" = "none"
